# Redis configuration file example.
# You can copy this and use it as your redis.conf file, or modify it as needed.

# Bind address: Which IPs Redis will listen on
# By default, Redis will listen on localhost only. To make it listen on all
# interfaces, you can set it to 0.0.0.0, but this is not recommended for production
# environments unless you have security measures in place (like a firewall).
bind 127.0.0.1

# Port Redis will run on
port 6379

# If you want Redis to require a password to connect, uncomment the following
# line and set a password. This is highly recommended for production environments.
# requirepass your_redis_password

# Timeout: Close the connection after a client is idle for N seconds (0 to disable timeout)
timeout 300

# Maximum memory usage: Redis will evict keys when it reaches this memory limit.
# By default, Redis has no memory limit. You can specify one in bytes (or using K, M, G).
# maxmemory <bytes>

# How Redis will evict keys when maxmemory is reached. Options are:
# - volatile-lru: Evict keys with an expiration set, least recently used first
# - allkeys-lru: Evict any key, least recently used first
# - volatile-ttl: Evict keys with an expiration set, shortest time to live first
# - noeviction: Don't evict anything, just return errors.
# maxmemory-policy noeviction

# Enable persistence (saving data to disk). Redis can periodically save its dataset to disk.
# The following line configures Redis to save the dataset every 900 seconds (15 minutes)
# if at least 1 key has changed. You can configure this to your needs.
save 900 1
save 300 10
save 60 10000

# Path where Redis will save the dump file (snapshot).
dbfilename dump.rdb
dir ./

# Enable append-only file (AOF) persistence, which logs every write operation to disk.
# This is generally slower than RDB snapshots but provides better durability.
# appendonly no

# Path where Redis will save the AOF file (only relevant if appendonly is enabled).
# appendfilename "appendonly.aof"

# If using AOF persistence, Redis will fsync the AOF file to disk:
# - always: fsync after every write (slowest but safest)
# - everysec: fsync once per second (reasonable trade-off between speed and durability)
# - no: Let the OS manage fsync (fastest but least safe)
# appendfsync everysec

# Redis can be configured to act as a master or slave in a Redis cluster.
# This is useful for replication. By default, Redis is not set up for replication.
# If you want to configure Redis as a replica, uncomment the following line and
# set the IP and port of the master.
# replicaof <master_ip> <master_port>

# Uncomment this if you want Redis to log queries slower than a specified number of milliseconds.
# If queries take longer than the specified time, they will be logged.
# slowlog-log-slower-than 10000

# Limit the size of the slow query log.
# slowlog-max-len 128

# Log file location (comment this line to use standard output).
# logfile "/var/log/redis/redis-server.log"

# Number of databases Redis will use (default is 16, you can increase/decrease as needed).
databases 16

# Additional security options, such as renaming the CONFIG command or restricting certain actions.
# rename-command CONFIG ""

# Sentinel or Cluster mode settings (if you use Redis in a cluster environment).
# These are advanced settings and should only be modified if you're setting up clustering or sentinel.
